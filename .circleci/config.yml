version: 2.1

workflows:
  Check, Build and Test:
    jobs:
      - Static Analysis
      - Build
      - Test:
          requires:
            - Build

  Deploy:
    jobs:
      - Trigger Deploy:
          type: approval
          filters:
            branches:
              only: /.*/

      - Deploy to AWS:
          requires:
            - Trigger Deploy

jobs:
  Static Analysis:
    docker:
      - image: circleci/openjdk:11-jdk
        auth:
          username: $DOCKERHUB_LOGIN
          password: $DOCKERHUB_PASSWORD

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout
      - run: gradle ktlintCheck
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle.kts" }}

  Build:
    docker:
      - image: circleci/openjdk:11-jdk
        auth:
          username: $DOCKERHUB_LOGIN
          password: $DOCKERHUB_PASSWORD

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle.kts" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Load dependencies
          command: gradle dependencies

      - save_cache:
          name: Execute build script
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle.kts" }}

  Test:
    docker:
      - image: circleci/openjdk:11-jdk
        auth:
          username: $DOCKERHUB_LOGIN
          password: $DOCKERHUB_PASSWORD

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle.kts" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Run tests
          command: gradle test

  Deploy to AWS:
    docker:
      - image: circleci/openjdk:11-jdk
        auth:
          username: $DOCKERHUB_LOGIN
          password: $DOCKERHUB_PASSWORD

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.2
          docker_layer_caching: true

      - run:
          name: Build Jar
          command: gradle bootJar

      # build and push Docker image
      - run: |
          docker build -t $DOCKERHUB_LOGIN/aimachine-backend .
          echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_LOGIN --password-stdin
          docker push $DOCKERHUB_LOGIN/aimachine-backend